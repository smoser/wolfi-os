package:
  name: jq
  version: 1.7.1
  epoch: 1
  description: "a lightweight and flexible JSON processor"
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - oniguruma-dev
      - wolfi-base

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/jqlang/jq/releases/download/jq-${{package.version}}/jq-${{package.version}}.tar.gz
      expected-sha256: 478c9ca129fd2e3443fe27314b455e211e0d8c60bc8ff7df703873deeee580c2

  - uses: autoconf/configure

  - uses: autoconf/make-install

  - uses: strip

subpackages:
  - name: "jq-dev"
    description: "headers for libjq"
    pipeline:
      - uses: split/dev

  - name: "jq-doc"
    description: "jq documentation"
    pipeline:
      - uses: split/manpages

update:
  enabled: true
  github:
    identifier: jqlang/jq
    strip-prefix: jq-
    tag-filter: jq-

test:
  pipeline:
    - name: Verify jq installation
      runs: |
        jq --version || exit 1
    - name: Basic JSON parsing
      runs: |
        echo '{"name":"John", "age":31, "city":"New York"}' | jq '.name' | grep 'John' || exit 1
    - name: Complex JSON parsing
      runs: |
        echo '{"employees":[{"firstName":"John", "lastName":"Doe"},{"firstName":"Anna", "lastName":"Smith"},{"firstName":"Peter", "lastName":"Jones"}]}' | jq '.employees[] | select(.firstName=="Anna").lastName' | grep 'Smith' || exit 1
    - name: JSON construction
      runs: |
        echo '{"name":"John", "age":31}' | jq '. + {"city":"New York"}' | grep 'New York' || exit 1
    - name: Filtering JSON arrays
      runs: |
        echo '[{"id":1,"name":"John"},{"id":2,"name":"Jane"},{"id":3,"name":"Doe"}]' | jq '.[] | select(.id > 1)' | grep -E 'Jane|Doe' || exit 1
    - name: Using jq to transform JSON structure
      runs: |
        echo '[{"id":1,"name":"John"},{"id":2,"name":"Jane"}]' | jq '{users: map({userId: .id, userName: .name})}' | grep -E '"userId": 1|"userId": 2' || exit 1
