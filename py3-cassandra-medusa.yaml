environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3.11-installer
      - py3.11-pip
      - python-3.11
      - python-3.11-dev
      - wolfi-base

package:
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - poetry
      - python-3.11-base
  description: Apache Cassandra backup and restore tool
  epoch: 0
  name: py3-cassandra-medusa
  options:
    no-depends: true
    no-provides: true
  version: 0.22.1

pipeline:
  - uses: git-checkout
    with:
      expected-commit: c5b5c475285458a067a69a1c5aa379786928eb0b
      repository: https://github.com/thelastpickle/cassandra-medusa
      tag: v${{package.version}}

  - name: Python Build
    runs: 'pip install wheel

      pip install poetry

      poetry add "aiohttp==3.9.4"

      poetry add "certifi==2024.7.4"

      poetry add "dnspython==2.6.1"

      poetry add "idna==3.7"

      # CVE-2024-35195: requests

      poetry add "requests@^2.23.0"

      # GHSA-m5vv-6r4h-3vj9: azure-identity

      poetry add "azure-identity==1.16.1"

      # GHSA-34jh-p97f-mpxf: urllib3

      poetry add "urllib3==1.26.19"

      poetry run pip freeze | grep -v cassandra-medusa > requirements.txt

      POETRY_VIRTUALENVS_IN_PROJECT=true poetry install

      poetry build

    '

  - runs: '# Setup the virtualenv

      python -m venv .venv --system-site-packages

      # Bump pip to patch a CVE

      .venv/bin/pip install --upgrade pip==24.0 setuptools==70.0.0

    '

  - runs: '.venv/bin/pip install -I -r requirements.txt --no-compile

      .venv/bin/pip install -I --no-compile dist/*.whl

    '

  - runs: '# python-snappy is required to run medusa using $MEDUSA_MODE=GRPC.

      .venv/bin/pip install -I python-snappy --no-compile

    '

  - runs: 'mkdir -p ${{targets.destdir}}/home/cassandra

      mv .venv ${{targets.destdir}}/home/cassandra/


      # edit the venv paths

      sed -i "s|/home/build|${{targets.destdir}}/home/cassandra|g" ${{targets.destdir}}/home/cassandra/.venv/bin/*


      # allow site-packages

      sed -i "s|include-system-site-packages = false|include-system-site-packages = true|g" ${{targets.destdir}}/home/cassandra/.venv/pyvenv.cfg

    '

  - runs: 'mkdir -p ${{targets.destdir}}/usr/bin

      cp k8s/medusa.sh ${{targets.destdir}}/usr/bin/medusa

      chmod +x ${{targets.destdir}}/usr/bin/medusa

    '

  - runs: 'cp pyproject.toml ${{targets.destdir}}/home/cassandra

      cp k8s/docker-entrypoint.sh ${{targets.destdir}}/home/cassandra

      chmod +x ${{targets.destdir}}/home/cassandra/docker-entrypoint.sh

    '

subpackages:
  - dependencies:
      runtime:
        - bash
        - busybox
    description: Compatibility package to place binaries and docker entrypoints in the location expected by upstream helm charts
    name: ${{package.name}}-compat
    pipeline:
      - runs: 'mkdir -p "${{targets.subpkgdir}}/home/cassandra/"

          ln -sf /usr/bin/medusa ${{targets.subpkgdir}}/home/cassandra/medusa

          # Symlink the binary from usr/bin to /bin

          mkdir -p "${{targets.subpkgdir}}"/bin

          ln -sf /usr/bin/grpc-health-probe ${{targets.subpkgdir}}/bin/grpc_health_probe

        '

test:
  environment:
    contents:
      packages:
        - wolfi-base
        - python-3.11-dev
        - grpc-health-probe
  pipeline:
    - runs: medusa --version
    - runs: 'set +e

        fail() { echo "$@" 1>&2; exit 1; }

        out=$(/home/cassandra/.venv/bin/python3 -m medusa.service.grpc.server 2>&1)

        status=$?

        echo "$out" | grep -q ''/etc/medusa/medusa.ini'' || fail "medusa.service.grpc.server output did not contain expected ''medusa.ini'' message. Exit status $status: $out"

        echo "medusa.service.grpc.server exited with expected error message"

      '
    - uses: py/pip-check

update:
  enabled: true
  github:
    identifier: thelastpickle/cassandra-medusa
    strip-prefix: v
