package:
  name: py3-psycopg2
  version: 2.9.9
  epoch: 2
  description: psycopg2 - Python-PostgreSQL Database Adapter
  copyright:
    - license: LGPL-3.0-or-later
  dependencies:
    provider-priority: 0

vars:
  pypi-package: psycopg2
  import: psycopg2

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '300'

environment:
  contents:
    packages:
      - postgresql-dev
      - py3-supported-build-base-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/psycopg/psycopg2
      tag: ${{package.version}}
      expected-commit: ad5bee7054519d87f25bc5828c502b2ebe197049

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - name: Test database creation
      runs: |
        useradd $PGUSER
        sudo -u $PGUSER initdb -D /tmp/test_db
        sudo -u $PGUSER pg_ctl -D /tmp/test_db -l /tmp/logfile start
        sudo -u $PGUSER createdb testdb
        psql -lqt | cut -d \| -f 1 | grep -qw testdb
    - name: Test psycopg2
    - runs: |
        cat <<'EOF' >> /tmp/test.py
        import psycopg2

        def main():
            conn = psycopg2.connect(dbname="testdb", user="wolfi")
            cursor = conn.cursor()

            try:
                # Create Table
                cursor.execute("""
                    CREATE TABLE IF NOT EXISTS example_table (
                        id SERIAL PRIMARY KEY,
                        message TEXT
                    )
                """)

                # Insert value
                cursor.execute("INSERT INTO example_table (message) VALUES (%s)", ("Hello Wolfy!",))
                conn.commit()

                # Select and print
                cursor.execute("SELECT message FROM example_table")
                result = cursor.fetchone()
                message = result[0]
                print("Message retrieved from database:", message)

            except Exception as e:
                print("Error:", e)

            finally:
                cursor.close()
                conn.close()

        if __name__ == "__main__":
            main()
        EOF
        python3 /tmp/test.py

update:
  enabled: true
  version-separator: _
  github:
    identifier: psycopg/psycopg2
    use-tag: true
