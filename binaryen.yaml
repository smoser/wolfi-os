package:
  name: binaryen
  version: "117"
  epoch: 0
  description: Optimizer and compiler/toolchain library for WebAssembly
  copyright:
    - license: Apache-2.0
  resources:
    cpu: 10
    memory: 10Gi

environment:
  contents:
    packages:
      - autoconf
      - automake
      - build-base
      - busybox
      - ca-certificates-bundle
      - cmake
      - samurai

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/webassembly/binaryen
      tag: version_${{package.version}}
      expected-commit: c62a0c97168e88f97bca4bd96298a5ffc041844d

  - uses: cmake/configure
    with:
      opts: |
        -DBUILD_TESTS=OFF \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_STANDARD=20

  - uses: cmake/build

  - uses: cmake/install

  - uses: strip

subpackages:
  - name: binaryen-dev
    pipeline:
      - uses: split/dev
    description: binaryen dev

update:
  enabled: true
  github:
    identifier: webassembly/binaryen
    strip-prefix: version_

test:
  pipeline:
    - runs: |
        cat > hello_world.wat <<'EOF'
        (module
        (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
        (memory $0 256 256)
        (export "add" (func $add))
        (func $add (param $x i32) (param $y i32) (result i32)
          (i32.add
          (local.get $x)
          (local.get $y)
          )
        )
        )
        EOF
        /usr/bin/wasm2js hello_world.wat -o hello_world.js
        cat hello_world.js
