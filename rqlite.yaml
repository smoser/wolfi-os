package:
  name: rqlite
  version: 8.24.7
  epoch: 1
  description: The lightweight, distributed relational database built on SQLite
  copyright:
    - license: MIT

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - go

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/rqlite/rqlite
      tag: v${{package.version}}
      expected-commit: d1aa350c52c377521006ad3d59543a0718fee5c5

  - runs: |
      mkdir -p ${{targets.contextdir}}/usr/bin
      go build -tags osusergo,netgo,sqlite_omit_load_extension \
          -o ${{targets.contextdir}}/usr/bin/rqlite \
          -ldflags="-s -w -extldflags=-static" \
          ./cmd/rqlite
      go build -tags osusergo,netgo,sqlite_omit_load_extension \
          -ldflags="-s -w -extldflags=-static" \
          -o ${{targets.contextdir}}/usr/bin/rqlited \
          ./cmd/rqlited

  - uses: strip

subpackages:
  - name: rqlite-oci-entrypoint
    pipeline:
      - runs: |
          mkdir -p ${{targets.contextdir}}/usr/bin
          install -Dm755 docker-entrypoint.sh ${{targets.contextdir}}/usr/bin
    dependencies:
      runtime:
        - busybox # The entrypoint script uses a shell

test:
  environment:
    contents:
      packages:
        - curl
        - busybox
  pipeline:
    - runs: |
        rqlited ~/node.1 &
        sleep 5 # wait for rqlited to start

        RQLITE_URL="http://127.0.0.1:4001"

        # Check the status using the HTTP API
        output=$(curl -s "$RQLITE_URL/status")

        # Check if the output contains expected status information
        if echo "$output" | grep -q '"store":'; then
          echo "rqlite server is running."
          exit 0
        else
          echo "Failed to connect to rqlite server."
          exit 1
        fi

update:
  enabled: true
  github:
    identifier: rqlite/rqlite
    strip-prefix: v
