package:
  name: py3-tensorflow-metadata
  version: 1.16.1
  epoch: 1
  description: Utilities for passing TensorFlow-related metadata between tools
  copyright:
    - license: Apache-2.0
  dependencies:
    provider-priority: 0

vars:
  pypi-package: tensorflow-metadata
  import: tensorflow_metadata

data:
  - name: py-versions
    items:
      3.10: '310'
      3.11: '311'
      3.12: '312'
      3.13: '300'

environment:
  contents:
    packages:
      - bash
      - bazel-6
      - openjdk-17
      - py3-supported-build-base-dev
  environment:
    JAVA_HOME: /usr/lib/jvm/java-17-openjdk

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 9d0fc933a0120ad1c99fc6ec6491a4503964821a
      repository: https://github.com/tensorflow/metadata
      tag: v${{package.version}}

subpackages:
  - range: py-versions
    name: py${{range.key}}-${{vars.pypi-package}}
    description: python${{range.key}} version of ${{vars.pypi-package}}
    dependencies:
      provider-priority: ${{range.value}}
      provides:
        - py3-${{vars.pypi-package}}
      runtime:
        - py${{range.key}}-absl-py
        - py${{range.key}}-googleapis-common-protos
        - py${{range.key}}-protobuf
    pipeline:
      - uses: py/pip-build-install
        with:
          python: python${{range.key}}
      - uses: strip
    test:
      pipeline:
        - uses: python/import
          with:
            python: python${{range.key}}
            imports: |
              import ${{vars.import}}

  - name: py3-supported-${{vars.pypi-package}}
    description: meta package providing ${{vars.pypi-package}} for supported python versions.
    dependencies:
      runtime:
        - py3.10-${{vars.pypi-package}}
        - py3.11-${{vars.pypi-package}}
        - py3.12-${{vars.pypi-package}}
        - py3.13-${{vars.pypi-package}}

test:
  pipeline:
    - uses: python/import
      with:
        imports: |
          import ${{vars.import}}
    - name: Import Test
      runs: |
        echo "Testing tensorflow-metadata imports..."
        python3 <<EOF-
        import tensorflow_metadata
        print('tensorflow-metadata imported successfully')
        EOF-
    - name: Basic Functionality Test
      runs: |
        echo "Testing tensorflow-metadata basic functionality..."
        python3 <<EOF-
        from tensorflow_metadata.proto.v0 import schema_pb2
        schema = schema_pb2.Schema()
        schema.feature.add(name='example_feature')
        assert schema.feature[0].name == 'example_feature', 'Basic feature addition failed'
        print('tensorflow-metadata basic functionality success')
        EOF-

update:
  enabled: true
  manual: false
  github:
    identifier: tensorflow/metadata
    strip-prefix: v
