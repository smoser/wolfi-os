package:
  name: py3-certifi
  version: 2024.02.02
  epoch: 2
  description: Python3 package for providing Mozilla's CA Bundle
  copyright:
    - license: MPL-2.0
  dependencies:
    runtime:
      - ca-certificates-bundle
      - python3

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - py3-setuptools
      - python3
      - wolfi-base

# certifi uses a special versioning scheme where the version is a date like "2023.07.22". During the
# build process, the version is "normalized" (and importantly, changed) to a form like "2023.7.22",
# which creates problems with vulnerability scanners, since vulnerability data for certifi is filed
# using its actual version numbers (the "2023.07.22" form). This transform creates the "normalized"
# version, so that we can use it when needed to update the version string back to its original form in
# the Python package's metadata.
var-transforms:
  - from: ${{package.version}}
    match: ([0-9]{4})\.0*([0-9]{1,2})\.0*([0-9]{1,2})
    replace: $1.$2.$3
    to: normalized-package-version

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/certifi/python-certifi.git
      tag: ${{package.version}}
      expected-commit: 45eb6113c0cff15293611eedf237f7345dcf24bd

  - uses: patch
    with:
      patches: use-alpine-system-certs.patch

  - runs: |
      python3 setup.py build

  - runs: |
      python3 setup.py install --prefix=/usr --root="${{targets.destdir}}" --skip-build
      _py3ver=$(python3 -c 'import sys; print("{}.{}".format(sys.version_info.major, sys.version_info.minor))')
      sed -i 's/Version: ${{vars.normalized-package-version}}/Version: ${{package.version}}/' "${{targets.destdir}}"/usr/lib/python"$_py3ver"/site-packages/certifi-${{vars.normalized-package-version}}-py3.12.egg-info/PKG-INFO

  - uses: strip

update:
  enabled: true
  github:
    identifier: certifi/python-certifi
    strip-prefix: v
    use-tag: true

test:
  pipeline:
    - runs: |
        LIBRARY="certifi"
        IMPORT_STATEMENT="import certifi"

        if ! python -c "$IMPORT_STATEMENT"; then
            echo "Failed to import library '$LIBRARY'."
            python -c "$IMPORT_STATEMENT" 2>&1
            exit 1
        else
            echo "Library '$LIBRARY' is installed and can be imported successfully."
            exit 0
        fi
